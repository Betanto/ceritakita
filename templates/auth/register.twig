<!DOCTYPE html>
<html>
<head>
    <title>Register</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
        :root {
            --primary-blue: #2563eb;
            --secondary-blue: #1d4ed8;
            --accent-orange: #f97316;
            --light-orange: #fed7aa;
            --dark-blue: #1e40af;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #1e3a8a 0%, #f97316 100%);
            min-height: 100vh;
            position: relative;
            overflow-x: hidden;
            padding: 2rem 0;
        }

        /* Animated background elements */
        .bg-shapes {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            overflow: hidden;
            z-index: 1;
        }

        .shape {
            position: absolute;
            border-radius: 50%;
            background: rgba(255, 255, 255, 0.1);
            animation: float 6s ease-in-out infinite;
        }

        .shape:nth-child(1) {
            width: 200px;
            height: 200px;
            top: 10%;
            left: 10%;
            animation-delay: 0s;
        }

        .shape:nth-child(2) {
            width: 150px;
            height: 150px;
            top: 70%;
            right: 10%;
            animation-delay: 2s;
        }

        .shape:nth-child(3) {
            width: 100px;
            height: 100px;
            top: 30%;
            right: 20%;
            animation-delay: 4s;
        }

        .shape:nth-child(4) {
            width: 120px;
            height: 120px;
            top: 50%;
            left: 20%;
            animation-delay: 3s;
        }

        @keyframes float {
            0%, 100% { transform: translateY(0px) rotate(0deg); }
            50% { transform: translateY(-20px) rotate(180deg); }
        }

        /* Register container */
        .register-wrapper {
            position: relative;
            z-index: 2;
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 3rem 1rem;
        }

        .register-container {
            max-width: 500px;
            width: 100%;
        }

        .register-card {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.2);
            border-radius: 20px;
            box-shadow: 0 25px 50px rgba(0, 0, 0, 0.15);
            overflow: hidden;
            transition: transform 0.3s ease, box-shadow 0.3s ease;
            margin: 2rem auto;
            position: relative;
        }

        .register-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 35px 60px rgba(0, 0, 0, 0.2);
        }

        .card-header {
            background: linear-gradient(135deg, var(--accent-orange), #ea580c);
            color: white;
            padding: 2rem;
            text-align: center;
            position: relative;
        }

        .card-header::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs><pattern id="grid" width="10" height="10" patternUnits="userSpaceOnUse"><path d="M 10 0 L 0 0 0 10" fill="none" stroke="rgba(255,255,255,0.1)" stroke-width="0.5"/></pattern></defs><rect width="100" height="100" fill="url(%23grid)"/></svg>');
            opacity: 0.3;
        }

        .card-header h1 {
            font-size: 2.2rem;
            font-weight: 700;
            margin-bottom: 0.5rem;
            position: relative;
            z-index: 1;
        }

        .card-header p {
            opacity: 0.9;
            font-size: 1rem;
            position: relative;
            z-index: 1;
        }

        .register-icon {
            width: 60px;
            height: 60px;
            background: var(--primary-blue);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 0 auto 1rem;
            font-size: 1.5rem;
            color: white;
            position: relative;
            z-index: 1;
        }

        .card-body {
            padding: 2.5rem;
        }

        .form-floating {
            position: relative;
            margin-bottom: 1.5rem;
        }

        .form-floating input {
            border: 2px solid #e2e8f0;
            border-radius: 12px;
            padding: 1rem;
            font-size: 1rem;
            transition: all 0.3s ease;
            background: rgba(255, 255, 255, 0.9);
        }

        .form-floating input:focus {
            border-color: var(--accent-orange);
            box-shadow: 0 0 0 3px rgba(249, 115, 22, 0.1);
            background: white;
        }

        .form-floating label {
            color: #64748b;
            font-weight: 500;
        }

        .input-group {
            position: relative;
        }

        .input-icon {
            position: absolute;
            right: 15px;
            top: 50%;
            transform: translateY(-50%);
            color: #64748b;
            z-index: 10;
            transition: opacity 0.3s ease;
        }

        /* Adjust icon position for password field with strength bar */
        .form-floating:has(.password-strength) .input-icon {
            top: 40%;
        }

        .input-icon.hidden {
            opacity: 0;
            pointer-events: none;
        }

        .btn-register {
            background: linear-gradient(135deg, var(--accent-orange), #ea580c);
            border: none;
            border-radius: 12px;
            padding: 1rem 2rem;
            font-size: 1.1rem;
            font-weight: 600;
            color: white;
            width: 100%;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
        }

        .btn-register::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
            transition: left 0.5s ease;
        }

        .btn-register:hover::before {
            left: 100%;
        }

        .btn-register:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 25px rgba(249, 115, 22, 0.3);
        }

        .btn-register:active {
            transform: translateY(0);
        }

        .login-link {
            color: var(--primary-blue);
            text-decoration: none;
            font-weight: 600;
            transition: all 0.3s ease;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
        }

        .login-link:hover {
            color: var(--primary-blue);
            transform: translateX(5px);
        }

        .alert {
            border-radius: 12px;
            border: none;
            padding: 1rem 1.5rem;
            margin-bottom: 1.5rem;
            background: linear-gradient(135deg, #fef2f2, #fee2e2);
            color: #dc2626;
            border-left: 4px solid #dc2626;
        }

        .alert-success {
            background: linear-gradient(135deg, #f0fdf4, #dcfce7);
            color: #16a34a;
            border-left: 4px solid #16a34a;
        }

        .divider {
            text-align: center;
            margin: 1.5rem 0;
            position: relative;
            color: #64748b;
        }

        .divider::before {
            content: '';
            position: absolute;
            top: 50%;
            left: 0;
            right: 0;
            height: 1px;
            background: #e2e8f0;
        }

        .divider span {
            background: white;
            padding: 0 1rem;
            position: relative;
            z-index: 1;
        }

        /* Password strength indicator */
        .password-strength {
            margin-top: 0.5rem;
            height: 4px;
            background: #e2e8f0;
            border-radius: 2px;
            overflow: hidden;
        }

        .password-strength-bar {
            height: 100%;
            width: 0%;
            border-radius: 2px;
            transition: all 0.3s ease;
        }

        .password-strength-weak { background: #ef4444; width: 25%; }
        .password-strength-fair { background: #f59e0b; width: 50%; }
        .password-strength-good { background: #10b981; width: 75%; }
        .password-strength-strong { background: #059669; width: 100%; }

        /* Responsive design */
        @media (max-width: 768px) {
            .register-wrapper {
                padding: 2rem 1rem;
            }
            
            .register-card {
                margin: 1rem auto;
            }
            
            .card-header {
                padding: 1.5rem;
            }
            
            .card-body {
                padding: 1.5rem;
            }
            
            .card-header h1 {
                font-size: 1.8rem;
            }
        }

        @media (max-width: 480px) {
            .register-wrapper {
                padding: 1rem 0.5rem;
            }
            
            .register-card {
                margin: 0.5rem auto;
            }
            
            .card-header {
                padding: 1.25rem;
            }
            
            .card-body {
                padding: 1.25rem;
            }
            
            .card-header h1 {
                font-size: 1.6rem;
            }
        }

        /* Loading animation */
        .btn-register.loading {
            pointer-events: none;
            opacity: 0.7;
        }

        .btn-register.loading::after {
            content: '';
            position: absolute;
            width: 20px;
            height: 20px;
            border: 2px solid transparent;
            border-top: 2px solid white;
            border-radius: 50%;
            animation: spin 1s linear infinite;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
        }

        @keyframes spin {
            0% { transform: translate(-50%, -50%) rotate(0deg); }
            100% { transform: translate(-50%, -50%) rotate(360deg); }
        }

        /* Glow effect */
        .glow {
            position: absolute;
            top: -2px;
            left: -2px;
            right: -2px;
            bottom: -2px;
            background: linear-gradient(45deg, var(--accent-orange), var(--primary-blue), var(--accent-orange));
            border-radius: 22px;
            z-index: -1;
            animation: glow 3s ease-in-out infinite alternate;
            opacity: 0.5;
        }

        @keyframes glow {
            0% { filter: blur(5px); }
            100% { filter: blur(15px); }
        }

        /* Form validation styles */
        .form-floating input.is-valid {
            border-color: #10b981;
            box-shadow: 0 0 0 3px rgba(16, 185, 129, 0.1);
        }

        .form-floating input.is-invalid {
            border-color: #dc2626;
            box-shadow: 0 0 0 3px rgba(220, 38, 38, 0.1);
        }

        .form-text {
            font-size: 0.875rem;
            color: #64748b;
            margin-top: 0.25rem;
        }

        /* Viewport height fix */
        @media (max-height: 700px) {
            .register-wrapper {
                min-height: auto;
                padding: 1rem;
            }
            
            .register-card {
                margin: 1rem auto;
            }
        }
    </style>
</head>
<body>
    <!-- Animated background shapes -->
    <div class="bg-shapes">
        <div class="shape"></div>
        <div class="shape"></div>
        <div class="shape"></div>
        <div class="shape"></div>
    </div>

    <!-- Register wrapper -->
    <div class="register-wrapper">
        <div class="register-container">
            <div class="register-card">
                <div class="glow"></div>
                
                <!-- Card header -->
                <div class="card-header">
                    <div class="register-icon">
                        <i class="fas fa-user-plus"></i>
                    </div>
                    <h1>Create Account</h1>
                    <p>Join us and start your journey</p>
                </div>

                <!-- Card body -->
                <div class="card-body">
                    <form action="/register" method="post" id="registerForm">
                        {% if error %}
                            <div class="alert alert-danger">
                                <i class="fas fa-exclamation-triangle me-2"></i>
                                {{ error }}
                            </div>
                        {% endif %}

                        {% if success %}
                            <div class="alert alert-success">
                                <i class="fas fa-check-circle me-2"></i>
                                {{ success }}
                            </div>
                        {% endif %}

                        <div class="form-floating">
                            <input type="text" name="username" class="form-control" id="username" placeholder="Username" required autofocus>
                            <label for="username">Username</label>
                            <div class="input-icon">
                                <i class="fas fa-user"></i>
                            </div>
                            <div class="form-text">Choose a unique username</div>
                        </div>

                        <div class="form-floating">
                            <input type="email" name="email" class="form-control" id="email" placeholder="Email" required>
                            <label for="email">Email Address</label>
                            <div class="input-icon">
                                <i class="fas fa-envelope"></i>
                            </div>
                            <div class="form-text">We'll never share your email</div>
                        </div>

                        <div class="form-floating">
                            <input type="password" name="password" class="form-control" id="password" placeholder="Password" required>
                            <label for="password">Password</label>
                            <div class="input-icon" id="passwordIcon">
                                <i class="fas fa-lock"></i>
                            </div>
                            <div class="password-strength">
                                <div class="password-strength-bar" id="passwordStrengthBar"></div>
                            </div>
                            <div class="form-text" id="passwordHelp">Password must be at least 8 characters</div>
                        </div>

                        <div class="form-floating">
                            <input type="password" name="confirm_password" class="form-control" id="confirmPassword" placeholder="Confirm Password" required>
                            <label for="confirmPassword">Confirm Password</label>
                            <div class="input-icon" id="confirmPasswordIcon">
                                <i class="fas fa-lock"></i>
                            </div>
                            <div class="form-text" id="confirmPasswordHelp">Passwords must match</div>
                        </div>

                        <button class="btn-register" type="submit" id="registerBtn">
                            <i class="fas fa-user-plus me-2"></i>
                            Create Account
                        </button>

                        <div class="divider">
                            <span>or</span>
                        </div>

                        <div class="text-center">
                            <a href="/login" class="login-link">
                                <i class="fas fa-sign-in-alt"></i>
                                Already have an account? Sign In
                            </a>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Password strength checker
        const passwordInput = document.getElementById('password');
        const confirmPasswordInput = document.getElementById('confirmPassword');
        const passwordIcon = document.getElementById('passwordIcon');
        const confirmPasswordIcon = document.getElementById('confirmPasswordIcon');
        const passwordStrengthBar = document.getElementById('passwordStrengthBar');
        const passwordHelp = document.getElementById('passwordHelp');
        const confirmPasswordHelp = document.getElementById('confirmPasswordHelp');

        // Function to toggle password icon visibility
        function togglePasswordIcon(input, icon) {
            if (input.value.length > 0) {
                icon.classList.add('hidden');
            } else {
                icon.classList.remove('hidden');
            }
        }

        // Password field event listeners
        passwordInput.addEventListener('input', function() {
            const password = this.value;
            
            // Toggle icon visibility
            togglePasswordIcon(this, passwordIcon);
            
            // Reset to default message if empty
            if (password === '') {
                passwordStrengthBar.className = 'password-strength-bar';
                passwordHelp.textContent = 'Password must be at least 8 characters';
                passwordHelp.style.color = '#64748b';
            } else {
                const strength = checkPasswordStrength(password);
                // Update strength bar
                passwordStrengthBar.className = 'password-strength-bar password-strength-' + strength.level;
                passwordHelp.textContent = strength.message;
                passwordHelp.style.color = strength.color;
            }
        });

        // Confirm password field event listeners
        confirmPasswordInput.addEventListener('input', function() {
            const password = passwordInput.value;
            const confirmPassword = this.value;
            
            // Toggle icon visibility
            togglePasswordIcon(this, confirmPasswordIcon);
            
            // Reset to default message if empty
            if (confirmPassword === '') {
                this.classList.remove('is-valid', 'is-invalid');
                confirmPasswordHelp.textContent = 'Passwords must match';
                confirmPasswordHelp.style.color = '#64748b';
            } else if (password !== confirmPassword) {
                this.classList.add('is-invalid');
                this.classList.remove('is-valid');
                confirmPasswordHelp.textContent = 'Passwords do not match';
                confirmPasswordHelp.style.color = '#dc2626';
            } else if (password === confirmPassword) {
                this.classList.add('is-valid');
                this.classList.remove('is-invalid');
                confirmPasswordHelp.textContent = 'Passwords match';
                confirmPasswordHelp.style.color = '#10b981';
            }
        });

        function checkPasswordStrength(password) {
            if (password.length < 4) {
                return { level: 'weak', message: 'Too short', color: '#ef4444' };
            } else if (password.length < 8) {
                return { level: 'fair', message: 'Fair - Add more characters', color: '#f59e0b' };
            } else if (password.length < 12) {
                return { level: 'good', message: 'Good - Consider adding symbols', color: '#10b981' };
            } else {
                return { level: 'strong', message: 'Strong password!', color: '#059669' };
            }
        }

        // Add loading animation on form submit
        document.getElementById('registerForm').addEventListener('submit', function(e) {
            const password = passwordInput.value;
            const confirmPassword = confirmPasswordInput.value;
            
            if (password !== confirmPassword) {
                e.preventDefault();
                confirmPasswordInput.classList.add('is-invalid');
                confirmPasswordHelp.textContent = 'Passwords do not match';
                confirmPasswordHelp.style.color = '#dc2626';
                return;
            }
            
            const btn = document.getElementById('registerBtn');
            btn.classList.add('loading');
            btn.innerHTML = '<span>Creating account...</span>';
        });

        // Add focus effects
        const inputs = document.querySelectorAll('.form-floating input');
        inputs.forEach(input => {
            input.addEventListener('focus', function() {
                this.parentElement.style.transform = 'translateY(-2px)';
            });
            
            input.addEventListener('blur', function() {
                this.parentElement.style.transform = 'translateY(0)';
            });
        });

        // Email validation
        const emailInput = document.getElementById('email');
        emailInput.addEventListener('input', function() {
            const email = this.value;
            const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
            
            if (email && emailRegex.test(email)) {
                this.classList.add('is-valid');
                this.classList.remove('is-invalid');
            } else if (email) {
                this.classList.add('is-invalid');
                this.classList.remove('is-valid');
            }
        });

        // Username validation
        const usernameInput = document.getElementById('username');
        usernameInput.addEventListener('input', function() {
            const username = this.value;
            
            if (username.length >= 3) {
                this.classList.add('is-valid');
                this.classList.remove('is-invalid');
            } else if (username) {
                this.classList.add('is-invalid');
                this.classList.remove('is-valid');
            }
        });
    </script>
</body>
</html>
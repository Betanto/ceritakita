<!DOCTYPE html>
<html lang="id">
<head>
    <title>Daftar - Register</title>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
        :root {
            --primary-blue: #2563eb;
            --secondary-blue: #1d4ed8;
            --accent-orange: #f97316;
            --light-orange: #fed7aa;
            --dark-blue: #1e40af;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #1e3a8a 0%, #f97316 100%);
            min-height: 100vh;
            position: relative;
            overflow-x: hidden;
            padding: 2rem 0;
        }

        .bg-shapes {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            overflow: hidden;
            z-index: 1;
        }

        .shape {
            position: absolute;
            border-radius: 50%;
            background: rgba(255, 255, 255, 0.1);
            animation: float 6s ease-in-out infinite;
        }

        .shape:nth-child(1) {
            width: 200px;
            height: 200px;
            top: 10%;
            left: 10%;
            animation-delay: 0s;
        }

        .shape:nth-child(2) {
            width: 150px;
            height: 150px;
            top: 70%;
            right: 10%;
            animation-delay: 2s;
        }

        .shape:nth-child(3) {
            width: 100px;
            height: 100px;
            top: 30%;
            right: 20%;
            animation-delay: 4s;
        }

        .shape:nth-child(4) {
            width: 120px;
            height: 120px;
            top: 50%;
            left: 20%;
            animation-delay: 3s;
        }

        @keyframes float {
            0%, 100% { transform: translateY(0px) rotate(0deg); }
            50% { transform: translateY(-20px) rotate(180deg); }
        }

        .register-wrapper {
            position: relative;
            z-index: 2;
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 3rem 1rem;
        }

        .register-container {
            max-width: 550px;
            width: 100%;
        }

        .register-card {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.2);
            border-radius: 20px;
            box-shadow: 0 25px 50px rgba(0, 0, 0, 0.15);
            overflow: hidden;
            transition: transform 0.3s ease, box-shadow 0.3s ease;
            margin: 2rem auto;
            position: relative;
        }

        .register-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 35px 60px rgba(0, 0, 0, 0.2);
        }

        .card-header {
            background: linear-gradient(135deg, var(--accent-orange), #ea580c);
            color: white;
            padding: 2rem;
            text-align: center;
            position: relative;
        }

        .card-header::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs><pattern id="grid" width="10" height="10" patternUnits="userSpaceOnUse"><path d="M 10 0 L 0 0 0 10" fill="none" stroke="rgba(255,255,255,0.1)" stroke-width="0.5"/></pattern></defs><rect width="100" height="100" fill="url(%23grid)"/></svg>');
            opacity: 0.3;
        }

        .card-header h1 {
            font-size: 2.2rem;
            font-weight: 700;
            margin-bottom: 0.5rem;
            position: relative;
            z-index: 1;
        }

        .card-header p {
            opacity: 0.9;
            font-size: 1rem;
            position: relative;
            z-index: 1;
        }

        .register-icon {
            width: 60px;
            height: 60px;
            background: var(--primary-blue);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 0 auto 1rem;
            font-size: 1.5rem;
            color: white;
            position: relative;
            z-index: 1;
        }

        .card-body {
            padding: 2.5rem;
        }

        .form-floating {
            position: relative;
            margin-bottom: 1.5rem;
        }

        .form-floating input {
            border: 2px solid #e2e8f0;
            border-radius: 12px;
            padding: 1rem;
            font-size: 1rem;
            transition: all 0.3s ease;
            background: rgba(255, 255, 255, 0.9);
        }

        .form-floating input:focus {
            border-color: var(--accent-orange);
            box-shadow: 0 0 0 3px rgba(249, 115, 22, 0.1);
            outline: none;
        }

        .form-floating label {
            color: #64748b;
            font-weight: 500;
            background: white;
            padding: 0 0.5rem;
            left: 8px;
            width: auto;
            height: auto;
            transform-origin: left center;
        }

        .form-floating input:focus ~ label,
        .form-floating input:not(:placeholder-shown) ~ label {
            color: var(--accent-orange);
            transform: scale(0.85) translateY(-1.8rem) translateX(0.15rem);
            background: white;
        }

        .password-toggle {
            position: absolute;
            right: 15px;
            top: 50%;
            transform: translateY(-50%);
            cursor: pointer;
            color: #64748b;
            z-index: 10;
            transition: color 0.3s ease;
        }

        .password-toggle:hover {
            color: var(--accent-orange);
        }

        .btn-register {
            width: 100%;
            padding: 1rem;
            background: linear-gradient(135deg, var(--accent-orange), #ea580c);
            border: none;
            border-radius: 12px;
            color: white;
            font-size: 1.1rem;
            font-weight: 600;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
        }

        .btn-register::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
            transition: left 0.5s ease;
        }

        .btn-register:hover::before {
            left: 100%;
        }

        .btn-register:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(249, 115, 22, 0.3);
        }

        .divider {
            text-align: center;
            margin: 1.5rem 0;
            position: relative;
            color: #64748b;
        }

        .divider::before {
            content: '';
            position: absolute;
            top: 50%;
            left: 0;
            right: 0;
            height: 1px;
            background: #e2e8f0;
            z-index: -1;
        }

        .divider span {
            background: white;
            padding: 0 1rem;
            font-size: 0.9rem;
            position: relative;
            z-index: 1;
        }

        .login-link {
            text-align: center;
            margin-top: 1.5rem;
        }

        .login-link a {
            color: var(--accent-orange);
            text-decoration: none;
            font-weight: 600;
            transition: color 0.3s ease;
        }

        .login-link a:hover {
            color: #ea580c;
        }

        .terms-checkbox {
            margin-bottom: 1.5rem;
        }

        .terms-checkbox input[type="checkbox"] {
            margin-right: 0.5rem;
        }

        .terms-checkbox label {
            font-size: 0.9rem;
            color: #64748b;
        }

        .terms-checkbox a {
            color: var(--accent-orange);
            text-decoration: none;
        }

        .terms-checkbox a:hover {
            text-decoration: underline;
        }

        .alert {
            margin-bottom: 1.5rem;
            border-radius: 12px;
            border: none;
            padding: 1rem;
        }

        .alert-success {
            background: linear-gradient(135deg, #dcfce7, #bbf7d0);
            color: #166534;
        }

        .alert-danger {
            background: linear-gradient(135deg, #fef2f2, #fecaca);
            color: #dc2626;
        }

        .form-text {
            font-size: 0.8rem;
            color: #64748b;
            margin-top: 0.5rem;
        }

        .is-invalid {
            border-color: #dc2626 !important;
        }

        .invalid-feedback {
            color: #dc2626;
            font-size: 0.8rem;
            margin-top: 0.5rem;
        }

        .is-valid {
            border-color: #16a34a !important;
        }

        .valid-feedback {
            color: #16a34a;
            font-size: 0.8rem;
            margin-top: 0.5rem;
        }

        .email-verification-notice {
            background: linear-gradient(135deg, #fef3c7, #fde68a);
            color: #92400e;
            padding: 1rem;
            border-radius: 12px;
            margin-bottom: 1.5rem;
            display: none;
        }

        .loading {
            position: relative;
            pointer-events: none;
        }

        .loading::after {
            content: '';
            position: absolute;
            top: 50%;
            left: 50%;
            width: 20px;
            height: 20px;
            border: 2px solid rgba(255, 255, 255, 0.3);
            border-top: 2px solid white;
            border-radius: 50%;
            animation: spin 1s linear infinite;
            transform: translate(-50%, -50%);
        }

        @keyframes spin {
            0% { transform: translate(-50%, -50%) rotate(0deg); }
            100% { transform: translate(-50%, -50%) rotate(360deg); }
        }

        @media (max-width: 768px) {
            .register-wrapper {
                padding: 1rem;
            }
            
            .card-header h1 {
                font-size: 1.8rem;
            }
            
            .card-body {
                padding: 1.5rem;
            }
        }
    </style>
</head>
<body>
    <div class="bg-shapes">
        <div class="shape"></div>
        <div class="shape"></div>
        <div class="shape"></div>
        <div class="shape"></div>
    </div>

    <div class="register-wrapper">
        <div class="register-container">
            <div class="register-card">
                <div class="card-header">
                    <div class="register-icon">
                        <i class="fas fa-user-plus"></i>
                    </div>
                    <h1>Daftar Akun</h1>
                    <p>Buat akun baru untuk mengakses semua fitur</p>
                </div>

                <div class="card-body">
                    <div class="email-verification-notice" id="emailNotice">
                        <i class="fas fa-envelope-circle-check me-2"></i>
                        <strong>Verifikasi Email Diperlukan!</strong>
                        <p class="mb-0 mt-1">Silakan periksa email Anda dan klik tautan verifikasi untuk mengaktifkan akun.</p>
                    </div>

                    <div class="alert alert-success" id="successAlert" style="display: none;">
                        <i class="fas fa-check-circle me-2"></i>
                        <span id="successMessage"></span>
                    </div>

                    <div class="alert alert-danger" id="errorAlert" style="display: none;">
                        <i class="fas fa-exclamation-triangle me-2"></i>
                        <span id="errorMessage"></span>
                    </div>

                    <form id="registerForm" novalidate>
                        <div class="form-floating">
                            <input type="text" 
                                   class="form-control" 
                                   id="nama" 
                                   name="nama" 
                                   placeholder="Nama Lengkap"
                                   required>
                            <label for="nama">Nama Lengkap</label>
                            <div class="invalid-feedback"></div>
                        </div>

                        <div class="form-floating">
                            <input type="email" 
                                   class="form-control" 
                                   id="email" 
                                   name="email" 
                                   placeholder="Alamat Email"
                                   required>
                            <label for="email">Alamat Email</label>
                            <div class="form-text">Email akan digunakan untuk verifikasi akun</div>
                            <div class="invalid-feedback"></div>
                            <div class="valid-feedback">Email valid</div>
                        </div>

                        <div class="form-floating">
                            <input type="tel" 
                                   class="form-control" 
                                   id="telepon" 
                                   name="telepon" 
                                   placeholder="Nomor Telepon"
                                   required>
                            <label for="telepon">Nomor Telepon</label>
                            <div class="form-text">Contoh: 081234567890</div>
                            <div class="invalid-feedback"></div>
                        </div>

                        <div class="form-floating">
                            <input type="password" 
                                   class="form-control" 
                                   id="password" 
                                   name="password" 
                                   placeholder="Kata Sandi"
                                   required>
                            <label for="password">Kata Sandi</label>
                            <span class="password-toggle" onclick="togglePassword('password')">
                                <i class="fas fa-eye" id="togglePassword"></i>
                            </span>
                            <div class="form-text">Minimal 8 karakter, kombinasi huruf, angka, dan simbol</div>
                            <div class="invalid-feedback"></div>
                        </div>

                        <div class="form-floating">
                            <input type="password" 
                                   class="form-control" 
                                   id="konfirmasi_password" 
                                   name="konfirmasi_password" 
                                   placeholder="Konfirmasi Kata Sandi"
                                   required>
                            <label for="konfirmasi_password">Konfirmasi Kata Sandi</label>
                            <span class="password-toggle" onclick="togglePassword('konfirmasi_password')">
                                <i class="fas fa-eye" id="toggleKonfirmasi"></i>
                            </span>
                            <div class="invalid-feedback"></div>
                        </div>

                        <div class="terms-checkbox">
                            <input type="checkbox" 
                                   class="form-check-input" 
                                   id="syarat_ketentuan" 
                                   name="syarat_ketentuan" 
                                   required>
                            <label class="form-check-label" for="syarat_ketentuan">
                                Saya setuju dengan <a href="#" target="_blank">Syarat & Ketentuan</a> 
                                dan <a href="#" target="_blank">Kebijakan Privasi</a>
                            </label>
                            <div class="invalid-feedback"></div>
                        </div>

                        <button type="submit" class="btn-register" id="registerBtn">
                            <i class="fas fa-user-plus me-2"></i>
                            Daftar Sekarang
                        </button>
                    </form>

                    <div class="divider">
                        <span>atau</span>
                    </div>

                    <div class="login-link">
                        <p>Sudah punya akun? <a href="login">Masuk di sini</a></p>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        function togglePassword(fieldId) {
            const passwordField = document.getElementById(fieldId);
            const toggleIcon = fieldId === 'password' ? 
                document.getElementById('togglePassword') : 
                document.getElementById('toggleKonfirmasi');
            
            if (passwordField.type === 'password') {
                passwordField.type = 'text';
                toggleIcon.classList.remove('fa-eye');
                toggleIcon.classList.add('fa-eye-slash');
            } else {
                passwordField.type = 'password';
                toggleIcon.classList.remove('fa-eye-slash');
                toggleIcon.classList.add('fa-eye');
            }
        }

        function validateEmail(email) {
            const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
            return emailRegex.test(email);
        }

        function validatePhone(phone) {
            const phoneRegex = /^(\+62|62|0)8[1-9][0-9]{6,9}$/;
            return phoneRegex.test(phone.replace(/\s/g, ''));
        }

        function validatePassword(password) {
            const minLength = 8;
            const hasUpperCase = /[A-Z]/.test(password);
            const hasLowerCase = /[a-z]/.test(password);
            const hasNumbers = /\d/.test(password);
            const hasSpecial = /[!@#$%^&*(),.?":{}|<>]/.test(password);
            
            return {
                isValid: password.length >= minLength && hasUpperCase && hasLowerCase && hasNumbers && hasSpecial,
                minLength: password.length >= minLength,
                hasUpperCase,
                hasLowerCase,
                hasNumbers,
                hasSpecial
            };
        }

        function showAlert(type, message) {
            const alertElement = document.getElementById(type + 'Alert');
            const messageElement = document.getElementById(type + 'Message');
            
            messageElement.textContent = message;
            alertElement.style.display = 'block';
            
            setTimeout(() => {
                alertElement.style.display = 'none';
            }, 5000);
        }

        function hideAlert(type) {
            const alertElement = document.getElementById(type + 'Alert');
            alertElement.style.display = 'none';
        }

        function setFieldValidation(fieldId, isValid, message) {
            const field = document.getElementById(fieldId);
            const feedback = field.parentElement.querySelector('.invalid-feedback');
            
            if (isValid) {
                field.classList.remove('is-invalid');
                field.classList.add('is-valid');
                if (feedback) feedback.textContent = '';
            } else {
                field.classList.remove('is-valid');
                field.classList.add('is-invalid');
                if (feedback) feedback.textContent = message;
            }
        }

        document.addEventListener('DOMContentLoaded', function() {
            const form = document.getElementById('registerForm');
            const fields = ['nama', 'email', 'telepon', 'password', 'konfirmasi_password'];

            fields.forEach(fieldId => {
                const field = document.getElementById(fieldId);
                field.addEventListener('blur', function() {
                    validateField(fieldId);
                });
                
                if (fieldId === 'password' || fieldId === 'konfirmasi_password') {
                    field.addEventListener('input', function() {
                        if (fieldId === 'konfirmasi_password') {
                            validateField('konfirmasi_password');
                        }
                    });
                }
            });

            form.addEventListener('submit', function(e) {
                e.preventDefault();
                
                hideAlert('success');
                hideAlert('error');
                
                let isFormValid = true;
                fields.forEach(fieldId => {
                    if (!validateField(fieldId)) {
                        isFormValid = false;
                    }
                });

                const termsCheckbox = document.getElementById('syarat_ketentuan');
                if (!termsCheckbox.checked) {
                    setFieldValidation('syarat_ketentuan', false, 'Anda harus menyetujui syarat dan ketentuan');
                    isFormValid = false;
                } else {
                    setFieldValidation('syarat_ketentuan', true, '');
                }

                if (isFormValid) {
                    submitForm();
                } else {
                    showAlert('error', 'Mohon lengkapi semua field dengan benar');
                }
            });
        });

        function validateField(fieldId) {
            const field = document.getElementById(fieldId);
            const value = field.value.trim();

            switch (fieldId) {
                case 'nama':
                    if (value.length < 2) {
                        setFieldValidation(fieldId, false, 'Nama harus minimal 2 karakter');
                        return false;
                    }
                    break;

                case 'email':
                    if (!validateEmail(value)) {
                        setFieldValidation(fieldId, false, 'Format email tidak valid');
                        return false;
                    }
                    break;

                case 'telepon':
                    if (!validatePhone(value)) {
                        setFieldValidation(fieldId, false, 'Nomor telepon tidak valid');
                        return false;
                    }
                    break;

                case 'password':
                    const passwordValidation = validatePassword(value);
                    if (!passwordValidation.isValid) {
                        let message = 'Kata sandi harus memiliki: ';
                        const requirements = [];
                        if (!passwordValidation.minLength) requirements.push('minimal 8 karakter');
                        if (!passwordValidation.hasUpperCase) requirements.push('huruf besar');
                        if (!passwordValidation.hasLowerCase) requirements.push('huruf kecil');
                        if (!passwordValidation.hasNumbers) requirements.push('angka');
                        if (!passwordValidation.hasSpecial) requirements.push('simbol');
                        message += requirements.join(', ');
                        
                        setFieldValidation(fieldId, false, message);
                        return false;
                    }
                    break;

                case 'konfirmasi_password':
                    const password = document.getElementById('password').value;
                    if (value !== password) {
                        setFieldValidation(fieldId, false, 'Konfirmasi kata sandi tidak cocok');
                        return false;
                    }
                    break;
            }

            setFieldValidation(fieldId, true, '');
            return true;
        }

        function submitForm() {
            const submitButton = document.getElementById('registerBtn');
            const formData = new FormData(document.getElementById('registerForm'));
            
            submitButton.classList.add('loading');
            submitButton.disabled = true;
            
            setTimeout(() => {
                submitButton.classList.remove('loading');
                submitButton.disabled = false;
                
                showAlert('success', 'Pendaftaran berhasil! Silakan periksa email Anda untuk verifikasi.');
                document.getElementById('emailNotice').style.display = 'block';
                
                document.getElementById('registerForm').reset();
                
                document.querySelectorAll('.is-valid, .is-invalid').forEach(el => {
                    el.classList.remove('is-valid', 'is-invalid');
                });
            }, 2000);
        }
    </script>
</body>
</html>